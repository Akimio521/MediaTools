name: Ëé∑ÂèñÊûÑÂª∫‰ø°ÊÅØ
description: ÊèêÂèñGitÊèê‰∫§ÂìàÂ∏å„ÄÅÊ†áÁ≠æ„ÄÅÊûÑÂª∫Êó∂Èó¥Êà≥ÔºåÂπ∂ÁîüÊàêÈÄÇÂΩìÁöÑ‰∫åËøõÂà∂Êñá‰ª∂Âêç
inputs:
  goos:
    description: ÁõÆÊ†áÊìç‰ΩúÁ≥ªÁªü
    required: true
  goarch:
    description: ÁõÆÊ†áÊû∂ÊûÑ
    required: true
  extension:
    description: Êñá‰ª∂Êâ©Â±ïÂêçÔºà‰æãÂ¶ÇÔºåWindows‰∏äÁöÑ.exeÔºâ
    required: false
    default: ""
  project-name:
    description: È°πÁõÆÂêçÁß∞
    required: false
    default: "MediaTools"
outputs:
  git-commit:
    description: Git commit ÂÆåÊï¥ÂìàÂ∏åÂÄº
    value: ${{ steps.build-info.outputs.git-commit }}
  version:
    description: ÁâàÊú¨Ê†áÁ≠æ
    value: ${{ steps.build-info.outputs.version }}
  built-at:
    description: ÊûÑÂª∫Êó∂Èó¥
    value: ${{ steps.build-info.outputs.built-at }}
  filename:
    description: ÁîüÊàêÁöÑ‰∫åËøõÂà∂Êñá‰ª∂Âêç
    value: ${{ steps.build-info.outputs.filename }}

runs:
  using: "composite"
  steps:
    - name: Extract build information
      id: build-info
      shell: bash
      run: |
        git_commit=$(git rev-parse HEAD)
        git_commit_short=$(git rev-parse --short HEAD)
        version=$(git describe --tags --abbrev=0 2>/dev/null || echo "dev-${git_commit_short}")
        built_at=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
        filename="${{ inputs.project-name }}-${{ inputs.goos }}-${{ inputs.goarch }}${{ inputs.extension }}"

        echo "git-commit=$git_commit" >> $GITHUB_OUTPUT
        echo "version=$version" >> $GITHUB_OUTPUT
        echo "built-at=$built_at" >> $GITHUB_OUTPUT
        echo "filename=$filename" >> $GITHUB_OUTPUT

        echo "üîç Build Information:"
        echo "  Git Commit: $git_commit"
        echo "  version: $version"
        echo "  Built At: $built_at"
        echo "  Filename: $filename"
