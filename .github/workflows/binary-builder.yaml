name: Binary Builder

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:
    inputs:
      NEED_BUILD_WEB:
        description: "是否需要构建前端"
        default: true
        required: true
        type: boolean

env:
  NEED_BUILD_WEB: ${{ inputs.NEED_BUILD_WEB }}

# concurrency:
#   group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
#   cancel-in-progress: true

jobs:
  build-web:
    if: ${{ env.NEED_BUILD_WEB == 'true' }}
    name: Build Web Frontend
    uses: ./.github/workflows/web-builder.yaml

  build-binary:
    needs: build-web
    strategy:
      matrix:
        include:
          - platform: ubuntu-22.04
            goos: linux
            goarch: amd64
          - platform: ubuntu-22.04-arm
            goos: linux
            goarch: arm64

          - platform: macos-latest
            goos: darwin
            goarch: amd64
          - platform: macos-latest
            goos: darwin
            goarch: arm64

          - platform: windows-latest
            goos: windows
            goarch: amd64
            extension: .exe
          # - platform: windows-11-arm
          #   goos: windows
          #   goarch: arm64
          #   extension: .exe

    name: Build for ${{ matrix.goos }}-${{ matrix.goarch }}
    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Dependency
        if: matrix.goos == 'linux'
        run: |
          sudo bash scripts/linux.sh

      - name: Download web build artifacts
        uses: actions/download-artifact@v4
        with:
          name: web-dist
          path: web/dist/

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23 # 使用低版本通过 GOTOOLCHAIN 自动下载更高版本

      - name: Get build information
        id: build-info
        uses: ./.github/actions/build-info
        with:
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          extension: ${{ matrix.extension }}

      - name: Build
        shell: bash
        env:
          GOTOOLCHAIN: auto
          CGO_ENABLED: 1
          GO111MODULE: on
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          mkdir -p build

          go build -o "build/${{ steps.build-info.outputs.filename }}" \
            -ldflags="-s -w \
                      -X MediaTools/internal/version.appVersion=${{ steps.build-info.outputs.version }} \
                      -X MediaTools/internal/version.commitHash=${{ steps.build-info.outputs.git-commit }} \
                      -X MediaTools/internal/version.buildTime=${{ steps.build-info.outputs.built-at }}" \
            .

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.build-info.outputs.filename }}
          path: build/${{ steps.build-info.outputs.filename }}
